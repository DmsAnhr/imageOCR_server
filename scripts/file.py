import base64
import cv2
import numpy as np
import json

def process_image(encoded_image):
    try:
        # Dekode gambar dari base64
        decoded_image = base64.b64decode(encoded_image)
        nparr = np.frombuffer(decoded_image, np.uint8)
        img = cv2.imdecode(nparr, cv2.IMREAD_COLOR)

        if img is None:
            raise Exception("Failed to decode image")

        # Ubah gambar menjadi hitam putih
        gray_image = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

        # Encode gambar hasil pemrosesan ke base64
        _, encoded_processed_image = cv2.imencode('.png', gray_image)
        base64_processed_image = base64.b64encode(encoded_processed_image.tobytes()).decode('utf-8')

        return base64_processed_image

    except Exception as e:
        # Cetak pesan kesalahan dan hasil pemrosesan ke stdout
        error_message = {'error': f"Error processing image: {e}", 'result': None}
        print(json.dumps(error_message))
        return None

if __name__ == "__main__":
    # Contoh data input untuk pengujian
    example_input = {"image": ""}

    try:
        # Membaca data JSON dari input contoh
        encoded_image = example_input.get('image')  

        # Proses gambar
        if encoded_image:
            processed_image = process_image(encoded_image)
            if processed_image is not None:
                # Kembalikan hasil pemrosesan sebagai JSON
                result = {'result': processed_image}
                print(json.dumps(result))
            else:
                # Tangani kesalahan jika ada
                sys.exit(1)
        else:
            # Tangani kesalahan jika tidak ada data gambar
            error_message = {'error': 'Invalid input data or missing image field', 'result': None}
            print(json.dumps(error_message))
            sys.exit(1)
    except Exception as e:
        # Tangani kesalahan selama proses
        error_message = {'error': f"Error processing image: {e}", 'result': None}
        print(json.dumps(error_message))
        sys.exit(1)
